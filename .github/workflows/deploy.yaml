name: build-and-deploy
on:
  push:
    branches: ["main"]
    paths:
      - "web-revised/**"
      - "was/**"
      - "apps/web-frontend/**"
      - "apps/was-api/**"

permissions:
  contents: write
  packages: write

concurrency:
  group: build-deploy
  cancel-in-progress: true

env:
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up env vars
        id: meta
        run: |
          echo "TAG=v${{ github.run_number }}" >> $GITHUB_ENV

      - name: Install tools
        run: |
          sudo apt-get update && sudo apt-get install -y curl
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Load kubeconfig
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 -d > "$HOME/.kube/config"
          chmod 600 "$HOME/.kube/config"

      - name: Build and Deploy Web
        run: |
          IMAGE=ghcr.io/unklo1200/web-updated
          docker build -t $IMAGE:$TAG -f web-revised/Dockerfile web-revised
          docker push $IMAGE:$TAG
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE:$TAG)
          sed -i "s#image: .*web-updated.*#image: ${DIGEST}#g" apps/web-frontend/webapp.yaml
          git config user.name "ci-bot"
          git config user.email "ci-bot@users.noreply.github.com"
          git commit -am "web: deploy $TAG" || true
          git push

      - name: Build and Deploy WAS
        run: |
          IMAGE=ghcr.io/unklo1200/was-updated
          docker build -t $IMAGE:$TAG -f was/Dockerfile was
          docker push $IMAGE:$TAG
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE:$TAG)
          sed -i "s#image: .*was-updated.*#image: ${DIGEST}#g" apps/was-api/wasapp.yaml
          git commit -am "was: deploy $TAG" || true
          git push

      - name: ArgoCD Sync Web
        env:
          APP_NAME: web-frontend
        run: |
          kubectl -n argocd port-forward svc/argocd-server 8443:443 >/tmp/pf.log 2>&1 &
          PF_PID=$!
          for i in {1..20}; do curl -sk https://localhost:8443 && break || sleep 1; done
          argocd login localhost:8443 --auth-token "$ARGOCD_AUTH_TOKEN" --insecure
          argocd app sync "$APP_NAME" --grpc-web --prune
          argocd app wait "$APP_NAME" --health --timeout 300
          kill $PF_PID || true

      - name: ArgoCD Sync WAS
        env:
          APP_NAME: was-api
        run: |
          kubectl -n argocd port-forward svc/argocd-server 8443:443 >/tmp/pf.log 2>&1 &
          PF_PID=$!
          for i in {1..20}; do curl -sk https://localhost:8443 && break || sleep 1; done
          argocd login localhost:8443 --auth-token "$ARGOCD_AUTH_TOKEN" --insecure
          argocd app sync "$APP_NAME" --grpc-web --prune
          argocd app wait "$APP_NAME" --health --timeout 300
          kill $PF_PID || true
